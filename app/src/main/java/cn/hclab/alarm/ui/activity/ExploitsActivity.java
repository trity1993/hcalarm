package cn.hclab.alarm.ui.activity;

import android.content.Intent;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;

import java.util.List;
import java.util.Map;

import cc.trity.common.Common;
import cc.trity.library.activity.BaseActivity;
import cc.trity.library.net.RequestCallback;
import cc.trity.library.net.RequestParameter;
import cc.trity.library.utils.GsonUtils;
import cc.trity.library.utils.LogUtils;
import cc.trity.library.utils.NetWorkUtils;
import cc.trity.model.entities.AlarmUserInfo;
import cn.hclab.alarm.R;
import cn.hclab.alarm.engine.RemoteService;
import cn.hclab.alarm.networks.HttpManager;
import cn.hclab.alarm.ui.HcAlarmApp;
import cn.hclab.alarm.ui.activity.base.AppBaseActivity;
import cn.hclab.alarm.utils.Tools;

/**
 * 通过微博或者腾讯登录方式后得到相关的信息
 */
public class ExploitsActivity extends AppBaseActivity implements RequestCallback {
    private static final String TAG="ExploitsActivity";
    private ImageButton ibEditMsg, ivSex;
    private ImageView ivHead;
    private TextView tvNickName, tvNeedPoints, tvNo;
    private HcAlarmApp hcAlarmApp;
    private AlarmUserInfo userInfo;
    private final int INIT_View = 1;
    private final int UPDATE_IMG = 2;

    private Handler mHandler = new Handler() {
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case INIT_View:
                    //更新view
                    initLocalMsg();
                    break;
                case UPDATE_IMG:
                    ivHead.setImageBitmap((Bitmap) msg.obj);
                    break;
                default:
                    break;
            }
        }

        ;
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        // TODO Auto-generated method stub
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_exploits);
        hcAlarmApp = (HcAlarmApp) getApplication();
        this.init(savedInstanceState);
    }

    @Override
    public void initVariables() {

    }

    @Override
    public void initView(Bundle savedInstanceState) {
        ibEditMsg = (ImageButton) findViewById(R.id.exploits_ib_edit);
        ivHead = (ImageView) findViewById(R.id.exploit_iv_head);
        ivSex = (ImageButton) findViewById(R.id.exploits_ib_sex);
        tvNickName = (TextView) findViewById(R.id.exploits_tv_name);
        tvNeedPoints = (TextView) findViewById(R.id.exploit_tv_needpoints);
        tvNo = (TextView) findViewById(R.id.exploit_tv_no);

    }

    @Override
    public void loadData() {
        // 设置信息:
        userInfo = hcAlarmApp.getUserInfo();
        if (userInfo.getAuthentication().getFreshAccessToken().isEmpty()) {
            //执行腾讯的初始化
            initLocalMsg();
            mHandler.sendEmptyMessage(INIT_View);
        } else {
            //执行微博的初始化
            loadingMsg(this,this);
        }
        tvNeedPoints.setText(R.string.record_null);
        tvNo.setText(R.string.record_null);
        ibEditMsg.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(ExploitsActivity.this,
                        InfoEditActivity.class));
            }
        });
    }

    /**
     * 使用微博登录的时候，并没有获得当前的个人信息，现在进行获得。
     */
    public void loadingMsg(BaseActivity baseActivity,RequestCallback requestCallback) {
        //生成url
        if(NetWorkUtils.isNetworkAvailable(ExploitsActivity.this)){
            if(hcAlarmApp!=null){
                AlarmUserInfo info=hcAlarmApp.getUserInfo();
                //执行网络请求的操作
                List<RequestParameter> parameterList= HttpManager.getReqParameters
                        (info.getAuthentication().getAccessToken(),info.getAuthentication().getOpenId());
                RemoteService.getInstance().invoke(baseActivity,"getUserInfo",parameterList,requestCallback);
            }

        }else{
            requestCallback.onFail(null);
        }
    }

    /*
    初始化当使用腾讯登录时的信息,因为登录完成的时候，我们进行获取到了相关信息，在这里直接显示即可
     */
    public void initLocalMsg() {
        // 设置头像,加载网络图片
        if (userInfo.getHead() != null) {
            new Thread(new Runnable() {
                @Override
                public void run() {
                    Bitmap bitmap = Tools.getbitmap(hcAlarmApp.getUserInfo().getHead());

                    bitmap = Tools.getCroppedBitmap(bitmap, Common.BITMAP_RADIUS, getResources().getColor(R.color.blue_bottom));
                    Message msg=new Message();
                    msg.obj=bitmap;
                    msg.what=UPDATE_IMG;
                    mHandler.sendMessage(msg);

                }
            }).start();
        }
        // 默认是男的
        if (userInfo.getSex() != null && userInfo.getSex().equals("女")) {
            ivSex.setImageResource(R.drawable.weman_icon);
        }
        if (userInfo.getNickName() != null)
            tvNickName.setText(userInfo.getNickName());
    }

    @Override
    protected void onPause() {
        // TODO Auto-generated method stub
        super.onPause();
        hcAlarmApp.saveUserInfo(hcAlarmApp.getUserInfo());
    }

    @Override
    public void onSuccess(String content) {
        LogUtils.d(TAG,content);

        Map<String,Object> contentMap=GsonUtils.getMap(content);
        hcAlarmApp.getUserInfo().setHead((String)contentMap.get("avatar_large"));//头像
        hcAlarmApp.getUserInfo().setNickName((String)contentMap.get("screen_name"));//姓名
        if (contentMap.get("gender").equals("m")) {//性别
            hcAlarmApp.getUserInfo().setSex("男");
        } else {
            hcAlarmApp.getUserInfo().setSex("女");
        }
        hcAlarmApp.getUserInfo().setSays((String)contentMap.get("description"));//签名
        mHandler.sendEmptyMessage(INIT_View);
    }

    @Override
    public void onFail(String errorMessage) {
        LogUtils.e(TAG, "网络加载失败");
    }
}